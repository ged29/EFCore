@model BookListCombinedDto
@{
    ViewData["Title"] = "Home Page";
}

<form id="sort-filter-form" class="form-horizontal">
    <div class="form-group">
        <div class="col-sm-3">
            <label class="control-label">Sort By</label>
            <select asp-for="SortFilterPageOptions.BookOrderBy" name="BookOrderBy"
                    asp-items="Html.GetEnumSelectList<BookOrderBy>()"
                    class="form-control sort-filter-width"
                    onchange="BookList.sendForm(this)"></select>
        </div>
        <div class="col-sm-3">
            <label class="control-label">Filter Type</label>
            <select asp-for="SortFilterPageOptions.BooksFilterBy" name="BooksFilterBy"
                    asp-items="Html.GetEnumSelectList<BooksFilterBy>()"
                    class="form-control sort-filter-width"
                    onchange="BookList.filterByHasChanged(this)"></select>
        </div>

        <div class="col-sm-3 dim-filter-value" id="filter-value-group">
            <label class="control-label">Filter By</label>
            <select asp-for="SortFilterPageOptions.FilterValue" name="FilterValue"
                    id="filter-value-dropdown"
                    class="form-control sort-filter-width"
                    disabled
                    onchange="BookList.sendForm(this)">
                <option>Select filter type...</option>
            </select>
        </div>

        <div class="col-sm-2">
            <label class="control-label">Page</label>
            <div>
                <input asp-for="SortFilterPageOptions.CurrentPage" name="CurrentPage"
                       class="form-control page-control-width page-num-input"
                       onchange="BookList.sendForm(this)">
                <span class="num-pages-text">of @Model.SortFilterPageOptions.PagesCount</span>
            </div>
        </div>

        <div class="col-sm-1">
            <label class="control-label">Page&nbsp;Size</label>
            <select asp-for="SortFilterPageOptions.PageSize" name="PageSize"
                    asp-items="Model.SortFilterPageOptions.PageSizes.Select(x => new SelectListItem {Text = x.ToString(), Value = x.ToString()})"
                    class="form-control page-control-width"
                    onchange="BookList.sendForm(this)"></select>
        </div>
    </div>
    <input id="PrevCheckState" name="PrevCheckState" type="hidden" value=@Model.SortFilterPageOptions.PrevStateCheck />
</form>
<br />
<table class="table">
    @foreach (var item in Model.BooksList)
    {
        <tr>
            <td>
                <h3>@Html.DisplayFor(modelItem => item.Title)</h3>
                <div>
                    <small>by</small>&nbsp;@Html.DisplayFor(m => item.AuthorsOrdered)
                </div>
                <div>
                    @(item.ReviewsCount == 0 ? "Be the first to review this book" : $"Votes: {item.ReviewsAverageVotes:F1} by {item.ReviewsCount} customers")
                </div>
                <div>
                    <span class="h4">@(item.ActualPrice < 0 ? "- not for sale - " : $"Price: ${item.ActualPrice:F}")</span>
                    @if (item.PromotionPromotionalText != null)
                    {
                        <span class="text-danger">
                            <strong>&nbsp;<del>$@($"{item.Price:F}")</del>&nbsp;<i>@(item.PromotionPromotionalText)</i></strong>
                        </span>
                    }
                </div>
            </td>
            <td class="vert-align">
                @if (Context.Request.IsLocal())
                {
                    <div class="dropdown">
                        <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown">
                            Admin
                            <span class="caret"></span>
                        </button>
                        <ul class="dropdown-menu">
                            <li>@Html.ActionLink("Change Pub Date", "ChangePubDate", "Admin", new { bookId = item.BookId })</li>
                            <li>@Html.ActionLink("Add Price Promotion", "ChangePromotion", "Admin", new { bookId = item.BookId })</li>
                            <li>@Html.ActionLink("Add Review", "AddBookReview", "Admin", new { bookId = item.BookId })</li>
                        </ul>
                    </div>
                }
            </td>
            <td class="vert-align">
                @if (item.ActualPrice >= 0)
                {
                    <div class="dropdown">
                        <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown">
                            Buy Book
                            <span class="caret"></span>
                        </button>
                        <ul class="dropdown-menu">
                            <li>@Html.ActionLink("Buy 1 book", "Buy", "Checkout", new { bookId = item.BookId, numBooks = 1 })</li>
                            <li>@Html.ActionLink("Buy 2 books", "Buy", "Checkout", new { bookId = item.BookId, numBooks = 2 })</li>
                            <li>@Html.ActionLink("Buy 3 books", "Buy", "Checkout", new { bookId = item.BookId, numBooks = 3 })</li>
                        </ul>
                    </div>
                }
            </td>
        </tr>
    }
</table>

@Html.Partial("LogModal", @Model.LogsCount)

@section Scripts{
    <script type='text/javascript'>

        document.addEventListener("DOMContentLoaded", function (event) {
            BookList.initialise('@Model.SortFilterPageOptions.BooksFilterBy', '@Model.SortFilterPageOptions.FilterValue', '@Url.Action("GetFilterSearchContent")');
            LoggingDisplay.initialise('@Url.Action("GetLog", "Logger")', '@Model.TraceIdentifier', @Model.LogsCount);
        });
    </script>
}